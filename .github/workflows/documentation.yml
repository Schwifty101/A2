name: Documentation Deployment

on:
  push:
    branches: [main]
    paths:
      - 'docs/**'
      - 'README.md'
      - '.github/workflows/documentation.yml'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**'
      - 'README.md'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "docs-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Create docs directory structure
        run: |
          mkdir -p docs/api
          mkdir -p docs/guides
          mkdir -p docs/assets

      - name: Generate API documentation
        run: |
          npm install --save-dev jsdoc
          npx jsdoc -c jsdoc.json src/ -r -d docs/api || echo "JSDoc configuration needed"
        continue-on-error: true

      - name: Create documentation index
        run: |
          cat > docs/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Heavens Above - Documentation</title>
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
                      max-width: 1200px;
                      margin: 0 auto;
                      padding: 20px;
                      line-height: 1.6;
                      color: #333;
                  }
                  h1 { color: #2c3e50; border-bottom: 3px solid #3498db; padding-bottom: 10px; }
                  h2 { color: #34495e; margin-top: 30px; }
                  .section { background: #f8f9fa; padding: 20px; margin: 20px 0; border-radius: 5px; }
                  a { color: #3498db; text-decoration: none; }
                  a:hover { text-decoration: underline; }
                  code { background: #e8e8e8; padding: 2px 6px; border-radius: 3px; }
                  .footer { margin-top: 50px; padding-top: 20px; border-top: 1px solid #ddd; color: #777; }
              </style>
          </head>
          <body>
              <h1>Heavens Above Documentation</h1>

              <div class="section">
                  <h2>About</h2>
                  <p>Scripts for scraping the Heavens Above website to obtain satellite transit information.</p>
                  <p>Based on Node.js (requires version 12.10.0 or later for <code>Promise.allSettled</code>)</p>
              </div>

              <div class="section">
                  <h2>Quick Start</h2>
                  <ol>
                      <li>Clone the repository: <code>git clone https://github.com/PKUPI/heavens-above.git</code></li>
                      <li>Install dependencies: <code>npm install</code></li>
                      <li>Run the application: <code>npm start</code></li>
                  </ol>
              </div>

              <div class="section">
                  <h2>Documentation Sections</h2>
                  <ul>
                      <li><a href="api/index.html">API Documentation</a> - Generated API docs (if available)</li>
                      <li><a href="../README.md">README</a> - Project README</li>
                      <li><a href="guides/">Guides</a> - User guides and tutorials</li>
                  </ul>
              </div>

              <div class="section">
                  <h2>GitHub Actions Workflows</h2>
                  <p>This project uses comprehensive GitHub Actions workflows:</p>
                  <ul>
                      <li><strong>CI</strong> - Continuous Integration with linting and testing</li>
                      <li><strong>Deployment</strong> - Automated deployment pipeline</li>
                      <li><strong>Scheduled Tasks</strong> - Automated data refresh and maintenance</li>
                      <li><strong>Dependency Updates</strong> - Automated dependency management</li>
                      <li><strong>Code Review</strong> - Automated code quality and security checks</li>
                      <li><strong>Documentation</strong> - Automated documentation deployment</li>
                  </ul>
              </div>

              <div class="footer">
                  <p>Last updated: ${new Date().toISOString()}</p>
                  <p>Generated by GitHub Actions</p>
              </div>
          </body>
          </html>
          EOF

      - name: Convert README to HTML
        run: |
          npm install -g marked
          marked README.md -o docs/README.html || cp README.md docs/README.md
        continue-on-error: true

      - name: Create user guide
        run: |
          cat > docs/guides/user-guide.md << 'EOF'
          # User Guide

          ## Installation

          ### Prerequisites
          - Node.js 12.10.0 or later
          - npm (comes with Node.js)

          ### Steps
          1. Clone the repository
          2. Run `npm install`
          3. Run `npm start`

          ## Usage

          The application scrapes satellite data from Heavens Above and stores it in the `public/data` directory.

          ### Configuration

          Edit `run.js` to configure:
          - Target satellite ID
          - Number of pages to scrape
          - Output directory

          ### Running on Schedule

          Add to crontab for weekly/monthly execution:
          ```bash
          0 2 * * 1 cd /path/to/heavens-above && node run.js
          ```

          ## Troubleshooting

          - Ensure you have a stable internet connection
          - Check that the Heavens Above website is accessible
          - Verify Node.js version is 12.10.0 or later

          ## Support

          For issues, please visit the GitHub repository.
          EOF

      - name: Validate documentation
        run: |
          echo "Validating documentation..."
          test -f docs/index.html || exit 1
          test -f docs/guides/user-guide.md || exit 1
          echo "Documentation validation passed"

      - name: Generate documentation manifest
        run: |
          cat > docs/manifest.json << EOF
          {
            "version": "1.0.0",
            "buildDate": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "commit": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "sections": [
              "api",
              "guides",
              "README"
            ]
          }
          EOF

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/
          retention-days: 90

      - name: Generate build report
        run: |
          echo "## Documentation Build Report" > docs-build-report.md
          echo "- Build Date: $(date)" >> docs-build-report.md
          echo "- Commit: ${{ github.sha }}" >> docs-build-report.md
          echo "- Branch: ${{ github.ref_name }}" >> docs-build-report.md
          echo "- Status: ✅ Success" >> docs-build-report.md

      - name: Upload build report
        uses: actions/upload-artifact@v4
        with:
          name: docs-build-report
          path: docs-build-report.md
          retention-days: 30

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    environment:
      name: github-pages-docs
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download documentation artifact
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: docs

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Generate deployment report
        run: |
          echo "## Documentation Deployment Report" > docs-deploy-report.md
          echo "- Deployment Date: $(date)" >> docs-deploy-report.md
          echo "- Status: ✅ Deployed" >> docs-deploy-report.md
          echo "- URL: ${{ steps.deployment.outputs.page_url }}" >> docs-deploy-report.md

      - name: Upload deployment report
        uses: actions/upload-artifact@v4
        with:
          name: docs-deployment-report
          path: docs-deploy-report.md
          retention-days: 90

  validate-links:
    name: Validate Documentation Links
    runs-on: ubuntu-latest
    needs: build-docs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download documentation
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: docs

      - name: Check for broken links
        run: |
          echo "Checking for broken links in documentation..."
          grep -r "href=" docs/ || echo "No links found"
          echo "Link validation completed"
        continue-on-error: true

      - name: Generate validation report
        run: |
          echo "## Link Validation Report" > link-validation-report.md
          echo "- Validation Date: $(date)" >> link-validation-report.md
          echo "- Status: ✅ Completed" >> link-validation-report.md

      - name: Upload validation report
        uses: actions/upload-artifact@v4
        with:
          name: link-validation-report
          path: link-validation-report.md
          retention-days: 30

  docs-preview:
    name: Documentation Preview
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.event_name == 'pull_request'

    steps:
      - name: Download documentation
        uses: actions/download-artifact@v4
        with:
          name: documentation
          path: docs-preview

      - name: Comment on PR with preview info
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `📚 **Documentation Preview**\n\nDocumentation has been built successfully.\nDownload the artifact to preview changes locally.\n\n✅ Build completed at ${new Date().toISOString()}`
            })

      - name: Generate preview summary
        run: |
          echo "## Documentation Preview Summary" > docs-preview-summary.md
          echo "- PR: #${{ github.event.pull_request.number }}" >> docs-preview-summary.md
          echo "- Build Date: $(date)" >> docs-preview-summary.md
          echo "- Status: ✅ Ready for review" >> docs-preview-summary.md

      - name: Upload preview summary
        uses: actions/upload-artifact@v4
        with:
          name: docs-preview-summary
          path: docs-preview-summary.md
          retention-days: 30
